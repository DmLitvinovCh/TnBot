import telebot
from config import TOKEN
import db_operations as db
import dt_def as dt
import datetime
import Gcalendar
import math
bot = telebot.TeleBot(TOKEN)

class Workers:
    """–ö–ª–∞—Å—Å —Ä–∞–±–æ—Ç–Ω–∏–∫–æ–≤ —Å–∞–ª–æ–Ω–∞"""

    def __init__(self, call):
        self.call = call

    def get_workers_menu(self):
        keyboard = telebot.types.InlineKeyboardMarkup(row_width=1)  # –Ω–∞—à–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
        key_add_worker = telebot.types.InlineKeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ ‚úÖ',
                                                            callback_data='add_worker')
        key_edit_worker = telebot.types.InlineKeyboardButton(text='–£–¥–∞–ª–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ ‚ùå',
                                                             callback_data='edit_worker')
        key_go_back = telebot.types.InlineKeyboardButton(text='‚¨Ö –ù–∞–∑–∞–¥',
                                                         callback_data='admin_mode')
        keyboard.add(key_add_worker)  # –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        keyboard.add(key_edit_worker)
        keyboard.add(key_go_back)
        bot.edit_message_reply_markup(self.call.message.chat.id, self.call.message.message_id)
        bot.edit_message_text('üôéüèª‚Äç‚ôÇüôçüèª‚Äç‚ôÄ –†–∞–∑–¥–µ–ª —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏:', self.call.message.chat.id, self.call.message.message_id,
                              reply_markup=keyboard)

    def add_worker_name(self):
        bot.edit_message_text('üôéüèª‚Äç‚ôÇüôçüèª‚Äç‚ôÄ –í–≤–µ–¥–∏—Ç–µ –§–ò–û —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞:' , self.call.message.chat.id,
                              self.call.message.message_id)
        bot.register_next_step_handler(self.call.message, self.add_worker)

    def add_worker(self, message):
        worker_name = message.text
        if (worker_name != ''):
            res = db.add_worker(worker_name)
        else:
            bot.send_message(self.call.message.chat.id, '–í—ã –Ω–µ –≤–≤–µ–ª–∏ –§–ò–û —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞!')

        keyboard = telebot.types.InlineKeyboardMarkup(row_width=2)  # –Ω–∞—à–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
        key_add_worker = telebot.types.InlineKeyboardButton(text='‚úÖ –î–æ–±–∞–≤–∏—Ç—å',
                                                            callback_data='add_worker')
        key_go_back = telebot.types.InlineKeyboardButton(text='‚¨Ö –ù–∞–∑–∞–¥',
                                                         callback_data='workers')
        key_go_main_menu = telebot.types.InlineKeyboardButton(text='‚Ü©Ô∏è –ù–∞ –≥–ª–∞–≤–Ω—É—é',
                                                         callback_data='start/2')
        buttons = []
        buttons.append(key_go_back)
        buttons.append(key_add_worker)
        buttons.append(key_go_main_menu)
        keyboard.add(*buttons)

        bot.delete_message(message.chat.id, message.message_id)
        bot.edit_message_text(res + '\n–í—ã–±–µ—Ä–µ—Ç–µ –ø—É–Ω–∫—Ç:', self.call.message.chat.id,
                              self.call.message.message_id, reply_markup=keyboard)

    def edit_worker(self):
        bot.edit_message_reply_markup(self.call.message.chat.id, self.call.message.message_id)
        userid = -1
        res = db.get_workers(userid)
        bot.edit_message_text('–°–ø–∏—Å–æ–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤:', self.call.message.chat.id, self.call.message.message_id)
        for id, name in res:
            buttons = []
            keyboard = telebot.types.InlineKeyboardMarkup(row_width=4)
            key_delete = telebot.types.InlineKeyboardButton(text=str('–£–¥–∞–ª–∏—Ç—å ‚ùå'),
                                                            callback_data='wrk_delete' + '/' + str(id))
            buttons.append(key_delete)
            keyboard.add(*buttons)
            sending_message = bot.send_message(self.call.message.chat.id, 'üë©üèª‚Äçüíº ' + str(name), reply_markup=keyboard)

        keyboard = telebot.types.InlineKeyboardMarkup(row_width=1)
        key_go_back = telebot.types.InlineKeyboardButton(text='‚¨Ö –ù–∞–∑–∞–¥',
                                                         callback_data='workers')
        keyboard.add(key_go_back)
        bot.send_message(self.call.message.chat.id, '–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥:', reply_markup=keyboard)

    def delete_worker(self):
        bot.edit_message_reply_markup(self.call.message.chat.id, self.call.message.message_id)
        userid = self.call.data.split('/', 1)[1]
        db.del_worker(userid)
        bot.answer_callback_query(callback_query_id=self.call.id, show_alert=True, text="–ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!")
        bot.edit_message_text(str(self.call.message.text) + '‚ùå', self.call.message.chat.id, self.call.message.message_id)


class Services:
    """–ö–ª–∞—Å—Å —É—Å–ª—É–≥ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º—ã—Ö –≤ —Å–∞–ª–æ–Ω–µ"""

    def __init__(self, call):
        self.call = call

    def get_services_menu(self):
        keyboard = telebot.types.InlineKeyboardMarkup(row_width=1)  # –Ω–∞—à–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
        key_add_services = telebot.types.InlineKeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å —É—Å–ª—É–≥—É ‚úÖ',
                                                              callback_data='add_services')
        key_delete_services = telebot.types.InlineKeyboardButton(text='–£–¥–∞–ª–∏—Ç—å —É—Å–ª—É–≥—É ‚ùå',
                                                                 callback_data='edit_services')
        key_go_back = telebot.types.InlineKeyboardButton(text='‚¨Ö –ù–∞–∑–∞–¥',
                                                         callback_data='admin_mode')
        keyboard.add(key_add_services)  # –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        keyboard.add(key_delete_services)
        keyboard.add(key_go_back)
        bot.edit_message_reply_markup(self.call.message.chat.id, self.call.message.message_id)
        bot.edit_message_text('üõç –†–∞–∑–¥–µ–ª —É—Å–ª—É–≥–∏:', self.call.message.chat.id, self.call.message.message_id,
                              reply_markup=keyboard)

    def add_services(self):
        bot.edit_message_text('üõç –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —É—Å–ª—É–≥–∏:', self.call.message.chat.id, self.call.message.message_id)
        bot.register_next_step_handler(self.call.message, self.add_services_name)

    def add_services_name(self, message):
        service_name = message.text
        if (service_name != ''):
            #answers = []
            #first_answer = service_name
            #answers.append(first_answer)
            res = db.add_services(service_name)
            bot.delete_message(message.chat.id, message.message_id)
            keyboard = telebot.types.InlineKeyboardMarkup(row_width=2)  # –Ω–∞—à–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
            key_add_service = telebot.types.InlineKeyboardButton(text='‚úÖ –î–æ–±–∞–≤–∏—Ç—å',
                                                                 callback_data='add_services')
            key_go_back = telebot.types.InlineKeyboardButton(text='‚¨Ö –ù–∞–∑–∞–¥',
                                                             callback_data='services')
            key_go_main_menu = telebot.types.InlineKeyboardButton(text='‚Ü©Ô∏è –ù–∞ –≥–ª–∞–≤–Ω—É—é',
                                                                  callback_data='start/2')
            buttons = []
            buttons.append(key_go_back)
            buttons.append(key_add_service)
            buttons.append(key_go_main_menu)
            keyboard.add(*buttons)
            #bot.delete_message(message.chat.id, message.message_id)
            bot.edit_message_text(res + '\n–í—ã–±–µ—Ä–µ—Ç–µ –ø—É–Ω–∫—Ç:', self.call.message.chat.id,
                                  self.call.message.message_id, reply_markup=keyboard)
            #bot.edit_message_text('üõç '+str(service_name)+ '\nüíµ –í–≤–µ–¥–∏—Ç–µ —Å—Ç–æ—Ä–∏–º–æ—Å—Ç—å –≤ —Ä—É–±.:', self.call.message.chat.id,
            #                      self.call.message.message_id)
            #bot.register_next_step_handler(self.call.message, self.add_services_cost, answers)

    # def add_services_cost(self, message, answers): #–ø–æ–∫–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è!
    #     service_cost = message.text
    #
    #     if (service_cost != ''):
    #         two_answer = service_cost
    #         answers.append(two_answer)
    #     res = db.add_services(answers)
    #
    #     keyboard = telebot.types.InlineKeyboardMarkup(row_width=2)  # –Ω–∞—à–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    #     key_add_service = telebot.types.InlineKeyboardButton(text='‚úÖ –î–æ–±–∞–≤–∏—Ç—å',
    #                                                          callback_data='add_services')
    #     key_go_back = telebot.types.InlineKeyboardButton(text='‚¨Ö –ù–∞–∑–∞–¥',
    #                                                      callback_data='services')
    #     key_go_main_menu = telebot.types.InlineKeyboardButton(text='‚Ü©Ô∏è –ù–∞ –≥–ª–∞–≤–Ω—É—é',
    #                                                      callback_data='start/2')
    #     buttons = []
    #     buttons.append(key_go_back)
    #     buttons.append(key_add_service)
    #     buttons.append(key_go_main_menu)
    #     keyboard.add(*buttons)
    #     bot.delete_message(message.chat.id, message.message_id)
    #     bot.edit_message_text(res + '\n–í—ã–±–µ—Ä–µ—Ç–µ –ø—É–Ω–∫—Ç:', self.call.message.chat.id,
    #                           self.call.message.message_id, reply_markup=keyboard)
    #     #bot.send_message(self.call.message.chat.id, res)
    #     #bot.send_message(self.call.message.chat.id, '–í—ã–±–µ—Ä–µ—Ç–µ –ø—É–Ω–∫—Ç:', reply_markup=keyboard)

    def edit_services(self):
        bot.edit_message_reply_markup(self.call.message.chat.id, self.call.message.message_id)
        serviceid = -1
        res = db.get_services(serviceid)
        bot.edit_message_text('–°–ø–∏—Å–æ–∫ —É—Å–ª—É–≥:', self.call.message.chat.id, self.call.message.message_id)
        for id, name, cost in res:
            buttons = []
            keyboard = telebot.types.InlineKeyboardMarkup(row_width=4)
            key_delete = telebot.types.InlineKeyboardButton(text=str('–£–¥–∞–ª–∏—Ç—å ‚ùå'),
                                                            callback_data='service_delete' + '/' + str(id))
            buttons.append(key_delete)
            keyboard.add(*buttons)
            bot.send_message(self.call.message.chat.id, 'üíÖüèª ' + str(name) , reply_markup=keyboard)

        keyboard = telebot.types.InlineKeyboardMarkup(row_width=1)
        key_go_back = telebot.types.InlineKeyboardButton(text='‚¨Ö –ù–∞–∑–∞–¥',
                                                         callback_data='services')
        keyboard.add(key_go_back)
        bot.send_message(self.call.message.chat.id, '–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥:', reply_markup=keyboard)

    def delete_services(self):
        bot.edit_message_reply_markup(self.call.message.chat.id, self.call.message.message_id)
        serviceid = self.call.data.split('/', 1)[1]

        res = db.get_services(serviceid)
        name = res[0][1]
        cost = res[0][2]
        db.del_service(serviceid)
        bot.answer_callback_query(callback_query_id=self.call.id, show_alert=True, text="–ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!")
        bot.edit_message_text('üíÖüèª' + str(name) + '‚ùå', self.call.message.chat.id,
                              self.call.message.message_id)

class Shedule:
    """–ö–ª–∞—Å—Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —Å–∞–ª–æ–Ω–∞"""

    def __init__(self, call):
        self.call = call

    def get_shedules_menu(self):
        keyboard = telebot.types.InlineKeyboardMarkup(row_width=1)  # –Ω–∞—à–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
        key_add_shedule = telebot.types.InlineKeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ ‚úÖ',
                                                             callback_data='add_shedule')
        key_delete_shedule = telebot.types.InlineKeyboardButton(text='–£–¥–∞–ª–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ ‚ùå',
                                                                callback_data='edit_shedule')
        key_show_shedule = telebot.types.InlineKeyboardButton(text='–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ üóì',
                                                                callback_data='show_shedule')
        key_go_back = telebot.types.InlineKeyboardButton(text='‚¨Ö –ù–∞–∑–∞–¥',
                                                         callback_data='admin_mode')
        keyboard.add(key_add_shedule)  # –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        keyboard.add(key_delete_shedule)
        keyboard.add(key_show_shedule)
        keyboard.add(key_go_back)
        bot.edit_message_reply_markup(self.call.message.chat.id, self.call.message.message_id)
        bot.edit_message_text('üóì –†–∞–∑–¥–µ–ª —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ:', self.call.message.chat.id, self.call.message.message_id,
                              reply_markup=keyboard)

    def add_shedule_select_worker(self):
        bot.edit_message_reply_markup(self.call.message.chat.id, self.call.message.message_id)
        keyboard = telebot.types.InlineKeyboardMarkup(row_width=2)
        res = db.get_workers(-1)
        for id, name in res:
            key_s = telebot.types.InlineKeyboardButton(text=str(name),
                                                       callback_data='select_shedule_worker_id' + '/' + str(id))
            keyboard.add(key_s)
        key_go_back = telebot.types.InlineKeyboardButton(text='‚¨Ö –ù–∞–∑–∞–¥', callback_data='shedule')
        keyboard.add(key_go_back)
        bot.edit_message_text('üë©üèª‚Äçüíº –í—ã–±–µ—Ä–µ—Ç–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞:', self.call.message.chat.id, self.call.message.message_id,
                              reply_markup=keyboard)
        #bot.send_message(self.call.message.chat.id, '–í—ã–±–µ—Ä–µ—Ç–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞:', reply_markup=keyboard)
        bot.answer_callback_query(callback_query_id=self.call.id, show_alert=False, text="–í—ã–±–µ—Ä–µ—Ç–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞:")

    def add_shedule_select_service(self, callbackstr):
        bot.answer_callback_query(callback_query_id=self.call.id, show_alert=False, text="–í—ã–±–µ—Ä–µ—Ç–µ —É—Å–ª—É–≥—É:")
        bot.edit_message_reply_markup(self.call.message.chat.id, self.call.message.message_id)

        keyboard = telebot.types.InlineKeyboardMarkup(row_width=2)
        res = db.get_services(-1)
        for id, name, cost in res:
            key_s = telebot.types.InlineKeyboardButton(text=str(name) ,#+ '(' + str(cost) + ' —Ä—É–±.)',
                                                       callback_data='select_shedule_service/' + str(
                                                           callbackstr) + '/' + str(id))
            keyboard.add(key_s)
        key_go_back = telebot.types.InlineKeyboardButton(text='‚¨Ö –ù–∞–∑–∞–¥', callback_data='add_shedule')
        keyboard.add(key_go_back)
        bot.edit_message_text('üíÖüèª –í—ã–±–µ—Ä–µ—Ç–µ —É—Å–ª—É–≥—É:', self.call.message.chat.id, self.call.message.message_id, reply_markup=keyboard)

    def add_shedule_select_shiftdate(self, callbackstr, enddate):

        bot.answer_callback_query(callback_query_id=self.call.id, show_alert=False, text="–í—ã–±–µ—Ä–µ—Ç–µ –¥–∞—Ç—É:")
        bot.edit_message_reply_markup(self.call.message.chat.id, self.call.message.message_id)
        keyboard = telebot.types.InlineKeyboardMarkup(row_width=4)
        if enddate == 0:
            now = dt.Current_Now_Str()
        else:
            now = enddate
        i = 0
        buttons = []
        pg_buttons = []
        while i < 16:
            date = datetime.datetime.strftime(now + datetime.timedelta(i), '%d.%m.%Y')
            key_s = telebot.types.InlineKeyboardButton(text=str(date),
                                                       callback_data='select_shiftdate/' + str(callbackstr) + '/' + str(
                                                           date))
            buttons.append(key_s)
            i += 1
            if i == 15:
                enddate = date

        keyboard.add(*buttons)
        key_back = telebot.types.InlineKeyboardButton(text='‚¨ÖÔ∏èÔ∏è',
                                                      callback_data='add_shedule_select_shiftdate_back/' + str(
                                                          callbackstr) + '/' + str(enddate))
        pg_buttons.append(key_back)
        key_next = telebot.types.InlineKeyboardButton(text='‚û°Ô∏è',
                                                      callback_data='add_shedule_select_shiftdate_next/' + str(
                                                          callbackstr) + '/' + str(enddate))
        pg_buttons.append(key_next)
        keyboard.add(*pg_buttons)
        key_go_back = telebot.types.InlineKeyboardButton(text='‚¨Ö –ù–∞–∑–∞–¥',
                                                         callback_data='select_shedule_worker_id/' + str(callbackstr))
        keyboard.add(key_go_back)
        bot.edit_message_text('üìÖ –í—ã–±–µ—Ä–µ—Ç–µ –¥–∞—Ç—É:', self.call.message.chat.id, self.call.message.message_id, reply_markup=keyboard)

    def add_shedule_select_begintime(self, callbackstr):
        bot.answer_callback_query(callback_query_id=self.call.id, show_alert=False, text="–í—ã–±–µ—Ä–µ—Ç–µ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞:")
        userid, serviceid, shiftdate = callbackstr.split('/')[:]
        sh = dt.DateStrToFloat(shiftdate)
        shstr = ''
        res = db.get_shedule(userid, sh, -1)
        i = 1

        for id, name, service, shdate, begintime, endtime in res:
            if shstr == '':
                shstr = 'üìÖ –ù–∞ –¥–∞—Ç—É [' + dt.DateToStr(shdate, 1) + ']' + '\n–£ –º–∞—Å—Ç–µ—Ä–∞: ' + str(
                    name) + ' –µ—Å—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ!\n\nüóì' + str(i) + '. [' + dt.IntToTimeStr(
                    begintime) + ' - ' + dt.IntToTimeStr(
                    endtime) + '].\n–£—Å–ª—É–≥–∞: ' + str(
                    service)  # + '\n‚ùå–î–ª—è —É–¥–∞–ª–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ: '  + '/del_sh_' + str(id) + '\n'
            else:
                shstr = shstr + '\nüóì' + str(i) + '. [' + dt.IntToTimeStr(begintime) + ' - ' + dt.IntToTimeStr(
                    endtime) + '].\n–£—Å–ª—É–≥–∞: ' + str(
                    service)  # + '\n‚ùå–î–ª—è —É–¥–∞–ª–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ: ' + '/del_sh_' + str(id)+ '\n'
            i += 1

        keyboard = telebot.types.InlineKeyboardMarkup(row_width=5)
        buttons = []
        format = '%H:%M'
        tm = datetime.datetime.strptime('07:00', format)

        i = 0

        while i < 15:
            t = datetime.datetime.strftime(tm + datetime.timedelta(hours=i), '%H:%M')
            key_s = telebot.types.InlineKeyboardButton(text=str(t), callback_data='select_begintime/'
                                                                                  + str(callbackstr) + '/' + str(t))
            buttons.append(key_s)
            i += 1
        keyboard.add(*buttons)

        if shstr == '':
            shstr = '\nüïì –í—ã–±–µ—Ä–µ—Ç–µ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã: '
        else:
            shstr = shstr + '\n\nüïì –í—ã–±–µ—Ä–µ—Ç–µ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–µ –ø–µ—Ä–µ—Å–µ–∫–∞—é—â–∏–µ—Å—è —Å –∏–º–µ—é—â–∏–º—Å—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º: '

        key_go_back = telebot.types.InlineKeyboardButton(text='‚¨Ö –ù–∞–∑–∞–¥',
                                                         callback_data='select_shedule_worker_id/' + str(callbackstr))
        keyboard.add(key_go_back)
        bot.edit_message_reply_markup(self.call.message.chat.id, self.call.message.message_id)
        bot.edit_message_text(shstr, self.call.message.chat.id, self.call.message.message_id,
                              reply_markup=keyboard)

    def add_shedule_select_endtime(self, callbackstr):
        bot.answer_callback_query(callback_query_id=self.call.id, show_alert=False, text="–í—ã–±–µ—Ä–µ—Ç–µ –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è:")

        keyboard = telebot.types.InlineKeyboardMarkup(row_width=5)
        buttons = []
        format = '%H:%M'
        tm = datetime.datetime.strptime('07:00', format)
        i = 0

        while i < 15:
            t = datetime.datetime.strftime(tm + datetime.timedelta(hours=i), '%H:%M')
            key_s = telebot.types.InlineKeyboardButton(text=str(t), callback_data='select_endtime/'
                                                                                  + str(callbackstr) + '/' + str(t))
            buttons.append(key_s)
            i += 1
        keyboard.add(*buttons)
        userid, serviceid, shiftdate, begintime = callbackstr.split('/')[:]
        key_go_back = telebot.types.InlineKeyboardButton(text='‚¨Ö –ù–∞–∑–∞–¥',
                                                         callback_data='select_shiftdate/' + str(userid)+'/'+str(serviceid)+'/'+str(shiftdate))
        keyboard.add(key_go_back)
        bot.edit_message_reply_markup(self.call.message.chat.id, self.call.message.message_id)
        bot.edit_message_text('üïì –í—ã–±–µ—Ä–µ—Ç–µ –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã:', self.call.message.chat.id, self.call.message.message_id,
                              reply_markup=keyboard)

    def add_shedule_select_step(self, callbackstr):
        bot.answer_callback_query(callback_query_id=self.call.id, show_alert=False,
                                  text="–í—ã–±–µ—Ä–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å 1 –ø—Ä–æ—Ü–µ–¥—É—Ä—ã(–≤ –º–∏–Ω.):")
        bot.edit_message_reply_markup(self.call.message.chat.id, self.call.message.message_id)
        keyboard = telebot.types.InlineKeyboardMarkup(row_width=3)
        buttons = []
        step = 30
        i = 0
        while i < 180:
            i += step
            key_s = telebot.types.InlineKeyboardButton(text=str(i),
                                                       callback_data='select_step/' + str(callbackstr) + '/' + str(i))
            buttons.append(key_s)
        keyboard.add(*buttons)
        userid, serviceid, shiftdate, begintime, endtime = callbackstr.split('/')[:]
        key_go_back = telebot.types.InlineKeyboardButton(text='‚¨Ö –ù–∞–∑–∞–¥',
                                                         callback_data='select_begintime/' + str(userid) + '/' + str(
                                                             serviceid) + '/' + str(shiftdate) + '/' +str(begintime))
        keyboard.add(key_go_back)
        bot.edit_message_text('üïì –í—ã–±–µ—Ä–µ—Ç–µ –≤—Ä–µ–º—è –æ–¥–Ω–æ–π –ø—Ä–æ—Ü–µ–¥—É—Ä—ã\n(–≤ –º–∏–Ω.):', self.call.message.chat.id,
                              self.call.message.message_id,
                              reply_markup=keyboard)

    # def add_shedule_select_cost(self, callbackstr ):
    #
    #     bot.answer_callback_query(callback_query_id=self.call.id, show_alert=False,
    #                               text="–£–∫–∞–∂–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å —É—Å–ª—É–≥–∏:")
    #     #bot.edit_message_reply_markup(self.call.message.chat.id, self.call.message.message_id)
    #     bot.edit_message_text('üíµ –£–∫–∞–∂–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å —É—Å–ª—É–≥–∏:', self.call.message.chat.id,
    #                           self.call.message.message_id)
    #     bot.register_next_step_handler(self.call.message, self.add_shedule, callbackstr)


    def add_shedule(self, callbackstr):


        userid, serviceid, shiftdate, begintime, endtime, step = callbackstr.split('/')[:]
        st = dt.TimeStrToInt(begintime)
        et = dt.TimeStrToInt(endtime)
        crdate = dt.Current_Now()
        sh = dt.DateStrToFloat(shiftdate)

        shdata = []
        tldata = []

        shdata.append((userid, serviceid, crdate, sh, st, et))
        while st < et:
            tldata.append([crdate, st, st + int(step)])
            st += int(step)

        res = db.add_user_shedule(shdata, tldata)
        gc_dict = []
        if len(res) > 0:
            for gcalendarid, talonid, shiftdate, begintime, endtime in res:
                start = dt.DateToDateIsoformat(shiftdate + (begintime / 1440))
                end = dt.DateToDateIsoformat(shiftdate + (endtime / 1440))
                event = {
                    "summary": '–°–≤–æ–±–æ–¥–Ω–æ–µ –≤—Ä–µ–º—è',
                    "description": '',
                    "start": {"dateTime": start, "timeZone": 'Europe/Moscow'},
                    "end": {"dateTime": end, "timeZone": 'Europe/Moscow'},
                    "colorId": '2',
                    "source": {
                        "url": 'https://t.me/llllllallllll_bot',
                        "title": talonid
                    },
                }
                gc_dict.append((gcalendarid, event))

            events_info = Gcalendar.add_event(gc_dict)
            if len(events_info) > 0:
                db.upd_talon_event(events_info)
            res = '–ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞! ‚úÖ'

        keyboard = telebot.types.InlineKeyboardMarkup(row_width=2)  # –Ω–∞—à–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
        key_add_worker = telebot.types.InlineKeyboardButton(text='‚úÖ –î–æ–±–∞–≤–∏—Ç—å',
                                                            callback_data='add_shedule')
        key_go_back = telebot.types.InlineKeyboardButton(text='‚¨Ö –ù–∞–∑–∞–¥', callback_data='shedule')
        key_go_main_menu = telebot.types.InlineKeyboardButton(text='‚Ü©Ô∏è –ù–∞ –≥–ª–∞–≤–Ω—É—é',
                                                              callback_data='start/2')
        buttons = []
        buttons.append(key_go_back)
        buttons.append(key_add_worker)
        buttons.append(key_go_main_menu)
        keyboard.add(*buttons)
        bot.edit_message_text(res + '\n–í—ã–±–µ—Ä–µ—Ç–µ –ø—É–Ω–∫—Ç:', self.call.message.chat.id, self.call.message.message_id, reply_markup=keyboard)
        #bot.send_message(self.call.message.chat.id, res)
        #bot.send_message(self.call.message.chat.id, '–í—ã–±–µ—Ä–µ—Ç–µ –ø—É–Ω–∫—Ç:', reply_markup=keyboard)

    def edit_shedule(self):
        bot.edit_message_reply_markup(self.call.message.chat.id, self.call.message.message_id)
        shiftdate = -1
        userid = -1
        res = db.get_shedule(userid, shiftdate, -1)
        bot.edit_message_text('–ü–µ—Ä–≤—ã–µ 20 —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–π –æ—Ç —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã:', self.call.message.chat.id, self.call.message.message_id)
        for id, username, servicename, shiftdate, begintime, endtime, cost in res:
            buttons = []
            keyboard = telebot.types.InlineKeyboardMarkup(row_width=4)
            key_delete = telebot.types.InlineKeyboardButton(text=str('–£–¥–∞–ª–∏—Ç—å ‚ùå'),
                                                            callback_data='shedule_delete' + '/' + str(id))
            buttons.append(key_delete)
            keyboard.add(*buttons)
            bot.send_message(self.call.message.chat.id, 'üóì –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ: \n\nüìÖ  –î–∞—Ç–∞: ' + dt.DateToStr(shiftdate, 1) +
                             '\nüïì  –í—Ä–µ–º—è: [' + dt.IntToTimeStr(begintime) + ' - ' + dt.IntToTimeStr(endtime) + ']' +
                             '\nüë©üèª‚Äçüíº  –ú–∞—Å—Ç–µ—Ä: ' + str(username) +
                             '\nüíÖüèª  –£—Å–ª—É–≥–∞: ' + str(servicename), reply_markup=keyboard)

        keyboard = telebot.types.InlineKeyboardMarkup(row_width=1)
        key_go_back = telebot.types.InlineKeyboardButton(text='‚¨Ö –ù–∞–∑–∞–¥',
                                                         callback_data='shedule')
        keyboard.add(key_go_back)
        bot.send_message(self.call.message.chat.id, '–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥:', reply_markup=keyboard)

    def delete_shedule(self):
        bot.edit_message_reply_markup(self.call.message.chat.id, self.call.message.message_id)
        sheduleid = self.call.data.split('/', 1)[1]

        res = db.get_shedule(-1, -1, sheduleid)
        username    = res[0][1]
        servicename = res[0][2]
        shiftdate   = res[0][3]
        begintime   = res[0][4]
        endtime     = res[0][5]
        cost        = res[0][6]

        db.del_shedule(sheduleid)

        bot.answer_callback_query(callback_query_id=self.call.id, show_alert=True, text="–ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!")
        bot.edit_message_text('üóì –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ: \n\nüìÖ  –î–∞—Ç–∞: ' + dt.DateToStr(shiftdate, 1) +
                             '\nüïì  –í—Ä–µ–º—è: [' + dt.IntToTimeStr(begintime) + ' - ' + dt.IntToTimeStr(endtime) + ']' +
                             '\nüë©üèª‚Äçüíº  –ú–∞—Å—Ç–µ—Ä: ' + str(username) +
                             '\nüíÖüèª  –£—Å–ª—É–≥–∞: ' + str(servicename) +
                             '‚ùå', self.call.message.chat.id, self.call.message.message_id)

        events = db.get_talons(sheduleid)
        for calendarId, eventid in events:
            Gcalendar.delete_event(calendarId, eventid)

    def show_shedule(self):
        bot.edit_message_reply_markup(self.call.message.chat.id, self.call.message.message_id)
        res = db.get_shedules_days()

        keyboard = telebot.types.InlineKeyboardMarkup(row_width=3)
        buttons = []
        for shiftdate in res:
            key = telebot.types.InlineKeyboardButton(text=str(dt.DateToStr(shiftdate[0], 1)),
                                                     callback_data='show_shedule_day/' + str(shiftdate[0]))
            buttons.append(key)

        key_go_back = telebot.types.InlineKeyboardButton(text='‚¨Ö –ù–∞–∑–∞–¥',
                                                         callback_data='shedule')
        keyboard.add(*buttons)
        keyboard.add(key_go_back)
        bot.edit_message_text('–ü–µ—Ä–≤—ã–µ 30 –¥–Ω–µ–π  –≤ –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ:', self.call.message.chat.id,
                              self.call.message.message_id, reply_markup=keyboard)

    def show_shedule_day(self, shiftdate):
        bot.edit_message_reply_markup(self.call.message.chat.id, self.call.message.message_id)
        res = db.get_shedule(-1, shiftdate, -1)

        keyboard = telebot.types.InlineKeyboardMarkup(row_width=1)
        buttons = []
        msg = 'üìÖ –î–∞—Ç–∞: ' + dt.DateToStr(int(shiftdate), 1)
        old_user_name = ''
        old_user_service = ''

        for shid, user_name, servie_name, shiftdate, begintime, endtime, client_name, phone, cost in res:
           if old_user_name == user_name:
               if old_user_service == servie_name:
                   msg = msg + '\nüïó' + str(dt.IntToTimeStr(begintime)) + ' ' + str(client_name or '') + ' ' + str(phone or '')
               else:
                   msg = msg + '\n' + '\nüíÖüèª–£—Å–ª—É–≥–∞: ' + str(servie_name) + '\nüïó' + str(
                       dt.IntToTimeStr(begintime)) + ' ' + str(client_name or '') + ' ' + str(phone or '')
           else:
               msg = msg + '\n' + '\nüë©üèª‚Äçüíº –ú–∞—Å—Ç–µ—Ä:' + str(user_name)
               if old_user_service == servie_name:
                   msg = msg + '\nüïó' + str(dt.IntToTimeStr(begintime)) + ' ' + str(client_name or '') + ' ' + str(phone or '')
               else:
                   msg = msg + '\n' + '\nüíÖüèª–£—Å–ª—É–≥–∞: ' + str(servie_name) + '\nüïó' + str(
                       dt.IntToTimeStr(begintime)) + ' ' + str(client_name or '') + ' ' + str(phone or '')

           old_user_service = servie_name
           old_user_name = user_name



        key_go_back = telebot.types.InlineKeyboardButton(text='‚¨Ö –ù–∞–∑–∞–¥', callback_data='show_shedule')
        keyboard.add(key_go_back)
        keyboard.add(*buttons)
        bot.edit_message_text(msg, self.call.message.chat.id, self.call.message.message_id, reply_markup=keyboard)

class Registration:
    """–ö–ª–∞—Å—Å –∑–∞–ø–∏—Å–∏ –ø–æ —É—Å–ª—É–≥–∏"""

    def __init__(self, call):
        self.call = call

    def reg_select_service(self):
        bot.answer_callback_query(callback_query_id=self.call.id, show_alert=False, text="–í—ã–±–µ—Ä–µ—Ç–µ —É—Å–ª—É–≥—É:")
        bot.edit_message_reply_markup(self.call.message.chat.id, self.call.message.message_id)

        keyboard = telebot.types.InlineKeyboardMarkup(row_width=2)
        res = db.get_services(-1)
        for id, name, cost in res:
            key_s = telebot.types.InlineKeyboardButton(text='üíÖüèª ' + str(name) ,
                                                       callback_data='reg_select_service/' + str(id))
            keyboard.add(key_s)
        key_go_back = telebot.types.InlineKeyboardButton(text='‚¨Ö –ù–∞–∑–∞–¥', callback_data='start/2')
        keyboard.add(key_go_back)
        bot.edit_message_text('üõç –í—ã–±–µ—Ä–µ—Ç–µ —É—Å–ª—É–≥—É:', self.call.message.chat.id, self.call.message.message_id,
                              reply_markup=keyboard)

    def reg_check_pat_employed_talons(self, callbackstr):
        res = db.get_clients_booked_talons(self.call.message.chat.id, callbackstr)
        if len(res) == 0:
            self.reg_select_date(callbackstr)
        else:
            bot.answer_callback_query(callback_query_id=self.call.id, show_alert=True,
                                      text="–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∑–∞–ø–∏—Å—å –Ω–∞ –¥–∞–Ω–Ω—É—é —É—Å–ª—É–≥—É, —Å–ø–µ—Ä–≤–∞ –æ—Ç–º–µ–Ω–∏—Ç–µ —Å—Ç–∞—Ä—É—é –∑–∞–ø–∏—Å—å:")
            for talonid, shiftdate, begintime, endtime, username, serviceid, servicename, cost in res:
                sendingmsg = 'üìÖ –î–∞—Ç–∞: ' + dt.DateToStr(shiftdate, 1) + ' –≤ ' + dt.IntToTimeStr(
                    begintime) + '\nüíÖüèª –£—Å–ª—É–≥–∞: ' + str(servicename)  + '\nüë©üèª‚Äçüíº –í–∞—à –º–∞—Å—Ç–µ—Ä: ' + str(username)
                keyboard = telebot.types.InlineKeyboardMarkup(row_width=1)
                key_del_tln = telebot.types.InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å ‚ùå',
                                                                 callback_data='del_talon' + '/' + str(talonid))
                key_del_msg = telebot.types.InlineKeyboardButton(text='–£–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ üóë',
                                                                 callback_data='del_msg')
                keyboard.add(key_del_tln)
                keyboard.add(key_del_msg)
                bot.send_message(self.call.message.chat.id, sendingmsg, reply_markup=keyboard)

    def reg_select_date(self, callbackstr):

        serviceid = callbackstr
        res = db.get_shiftdays_with_free_time(serviceid)
        if len(res) == 0:
            bot.answer_callback_query(callback_query_id=self.call.id, show_alert=True,
                                      text="–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–∞ –±–ª–∏–∂–∞–π—à–∏–µ 30 –¥–Ω–µ–π –Ω–µ—Ç —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏üòî\n–í—ã–±–µ—Ä–µ—Ç–µ –¥—Ä—É–≥—É—é —É—Å–ª—É–≥—É –ª–∏–±–æ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ")
        else:
            bot.answer_callback_query(callback_query_id=self.call.id, show_alert=False, text="–í—ã–±–µ—Ä–µ—Ç–µ –¥–∞—Ç—É:")
            bot.edit_message_reply_markup(self.call.message.chat.id, self.call.message.message_id)
            keyboard = telebot.types.InlineKeyboardMarkup(row_width=3)
            buttons = []
            key_go_back = telebot.types.InlineKeyboardButton(text='‚¨Ö –ù–∞–∑–∞–¥', callback_data='registration')
            for shiftdate in res:
                key = telebot.types.InlineKeyboardButton(text=str(dt.DateToStr(shiftdate[0], 1)),
                                                         callback_data='reg_select_date/' + str(
                                                             serviceid) + '/' + str(shiftdate[0]))
                buttons.append(key)

            keyboard.add(*buttons)
            keyboard.add(key_go_back)
            bot.edit_message_text('–ù–∏–∂–µ –ø—Ä–∏–≤–µ–¥–µ–Ω—ã –¥–∞—Ç—ã –≤ –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å —Å–≤–æ–±–æ–¥–Ω—ã–µ –º–µ—Å—Ç–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏:\n\nüìÖ –í—ã–±–µ—Ä–µ—Ç–µ –¥–∞—Ç—É:',
                                  self.call.message.chat.id, self.call.message.message_id, reply_markup=keyboard)

    def reg_select_time(self, callbackstr):
        serviceid, shiftdate = callbackstr.split('/')[:]
        servicename = db.get_services(serviceid)
        msgstr = 'üìÖ –î–∞—Ç–∞: ' + dt.DateToStr(int(shiftdate), 1) + '\n' + 'üíÖüèª –£—Å–ª—É–≥–∞: ' + str(
            servicename[0][1]) + '\n\n' + '–í—ã–±–µ—Ä–µ—Ç–µ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è:'
        bot.answer_callback_query(callback_query_id=self.call.id, show_alert=False, text='–í—ã–±–µ—Ä–µ—Ç–µ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è:')
        bot.edit_message_reply_markup(self.call.message.chat.id, self.call.message.message_id)
        res = db.get_free_shedule_intervals(serviceid, shiftdate)
        keyboard = telebot.types.InlineKeyboardMarkup(row_width=1)
        buttons = []
        for id, begintime, endtime, username, cost in res:
            button_text = 'üïì ' + dt.IntToTimeStr(begintime) + ' üë©üèª‚Äçüíº ' + str(username)
            key = telebot.types.InlineKeyboardButton(text=button_text, callback_data='reg_select_time' + '/' + str(id))
            buttons.append(key)
        keyboard.add(*buttons)
        key_go_back = telebot.types.InlineKeyboardButton(text='‚¨Ö –ù–∞–∑–∞–¥', callback_data='reg_select_service/' + str(serviceid))

        keyboard.add(key_go_back)
        bot.edit_message_text(msgstr, self.call.message.chat.id, self.call.message.message_id, reply_markup=keyboard)

    def reg_get_patient_phone(self, callbackstr, msg):
        talonid = callbackstr
        taloninfo = db.get_talon(talonid)
        (talonid, shiftdate, begintime, endtime, username, serviceid, servicename, cost, eventid, gcalendarid,
         client_name, phone, tlg_client_name) = taloninfo
        res = db.add_booked_talon(talonid)

        if msg > 0:
            bot.delete_message(self.call.message.chat.id, msg)
        else:
            bot.answer_callback_query(callback_query_id=self.call.id, show_alert=True,
                                      text="–î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏ –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å\n—Å–≤–æ–∏–º –Ω–æ–º–µ—Ä–æ–º –Ω–∞–∂–∞–≤ –∫–ª–∞–≤–∏—à—É –Ω–∏–∂–µ\n–ï—Å–ª–∏ –Ω–µ –∑–µ–≤–µ—Ä—à–∏—Ç—å –∑–∞–ø–∏—Å—å\n–≤ —Ç–µ—á–µ–Ω–∏–∏ 5 –º–∏–Ω—É—Ç, –¥–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è —Å—Ç–∞–Ω–µ—Ç\n–¥–æ—Å—Ç—É–ø–Ω–æ –¥—Ä—É–≥–∏–º –∫–ª–∏–µ–Ω—Ç–∞–º")
            bot.delete_message(self.call.message.chat.id, self.call.message.message_id)

        # if not res:
        #     bot.answer_callback_query(callback_query_id=self.call.id, show_alert=True,
        #                               text="–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –¥–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è —Ç–æ–ª—å–∫–æ —á—Ç–æ —É—Å–ø–µ–ª–∏ –∑–∞–Ω—è—Ç—å üòî\n–í—ã–±–µ—Ä–µ—Ç–µ, –¥—Ä—É–≥–æ–µ —Å–≤–æ–±–æ–¥–Ω–æ–µ –≤—Ä–µ–º—èüïó")
        #     callback = str(serviceid) + '/' + str(shiftdate)
        #     self.reg_select_time(callback)
        # else:
            #bot.answer_callback_query(callback_query_id=self.call.id, show_alert=True,
            #                          text="–î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏\n–ø–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º –Ω–æ–º–µ—Ä–æ–º\n–Ω–∞–∂–∞–≤ –∫–ª–∞–≤–∏—à—É –Ω–∏–∂–µ\n–ï—Å–ª–∏ –Ω–µ –∑–µ–≤–µ—Ä—à–∏—Ç—å –∑–∞–ø–∏—Å—å\n–≤ —Ç–µ—á–µ–Ω–∏–∏ 5 –º–∏–Ω—É—Ç, –¥–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è —Å—Ç–∞–Ω–µ—Ç\n–¥–æ—Å—Ç—É–ø–Ω–æ –¥—Ä—É–≥–∏–º –∫–ª–∏–µ–Ω—Ç–∞–º")

        sendmsg = 'üìÖ  –î–∞—Ç–∞: ' + dt.DateToStr(shiftdate, 1) + '\n' + 'üïó  –í—Ä–µ–º—è: ' + dt.IntToTimeStr(
            begintime) + ' - ' + dt.IntToTimeStr(endtime) + '\nüíÖüèª  –£—Å–ª—É–≥–∞: ' + str(
            servicename) + '\n' + 'üë©üèª‚Äçüíº  –ú–∞—Å—Ç–µ—Ä: ' + str(username) + '\n\nüì± –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å –≤–∞—à–∏–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞:'

        keyboard = telebot.types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True, one_time_keyboard=True)
        button_phone = telebot.types.KeyboardButton(text="–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞ ‚úÖ", request_contact=True)
        keyboard.add(button_phone)
        send = bot.send_message(self.call.message.chat.id, sendmsg, reply_markup=keyboard)
        old_message = send.message_id
        bot.register_next_step_handler(send, self.reg_book_talon, talonid, old_message, self.call.id) #, self.call.id)

    def reg_book_talon(self, message, talonid, old_message, callid):

        try:
            message.contact.phone_number.isdigit()
            talon_status = db.get_talon_status(talonid)
            if talon_status:
                phone = str(message.contact.phone_number)
                if phone[0] == '+':
                    phone = '8' + str(message.contact.phone_number)[2:12]
                else:
                    phone = '8' + str(message.contact.phone_number)[1:11]

                chatid = message.chat.id
                tlg_clientid = message.from_user.id
                client_name = message.from_user.first_name
                tlg_client_name = message.from_user.username
                res = db.add_client_talon(talonid, chatid, tlg_clientid, client_name, tlg_client_name, phone)
                if res:
                    taloninfo = db.get_talon(talonid)
                    (talonid, shiftdate, begintime, endtime, username, serviceid, servicename, cost, eventid,
                     gcalendarid, client_name, phone, tlg_client_name) = taloninfo
                    event_star = dt.DateToDateIsoformat(shiftdate + (begintime / 1440))
                    event_end = dt.DateToDateIsoformat(shiftdate + (endtime / 1440))
                    colorId = 4
                    Gcalendar.update_event(gcalendarid, eventid, event_star, event_end, talonid, client_name, phone, str('https://t.me/'+tlg_client_name),
                                           colorId)
                    sendingmsg = '‚úÖ –í—Ä–µ–º—è –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–æ!\n\nüìÖ –î–∞—Ç–∞: ' + dt.DateToStr(shiftdate,
                                                                                      1) + ' –≤ ' + dt.IntToTimeStr(
                        begintime) + '\nüíÖüèª –£—Å–ª—É–≥–∞: ' + str(servicename) + '\nüë©üèª‚Äçüíº –í–∞—à –º–∞—Å—Ç–µ—Ä: ' + str(username)
                    buttons = []
                    keyboard = telebot.types.InlineKeyboardMarkup(row_width=1)
                    key_del_tln = telebot.types.InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å ‚ùå',
                                                                     callback_data='del_talon' + '/' + str(talonid))
                    key_del_msg = telebot.types.InlineKeyboardButton(text='–£–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ üóë',
                                                                     callback_data='del_msg')
                    keyboard.add(key_del_tln)
                    keyboard.add(key_del_msg)

                    keyboard.add(*buttons)
                    bot.delete_message(self.call.message.chat.id, message.message_id)
                    bot.delete_message(self.call.message.chat.id, old_message)
                    bot.send_message(self.call.message.chat.id, sendingmsg, reply_markup=keyboard)

                    ftalons = db.get_free_talons(serviceid, shiftdate, begintime, self.call.message.chat.id)

                    for talonid, shiftdate, begintime, endtime, username, serviceid, servicename, cost in ftalons:
                        sendingmsg = '–í —ç—Ç–æ –∂–µ –≤—Ä–µ–º—è –º–æ–∂–Ω–æ\n–∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –¥—Ä—É–≥—É—é —É—Å–ª—É–≥—É\n–ù–µ —Ö–æ—Ç–∏—Ç–µ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å?\n–ï—Å–ª–∏ –≤ —Ç–µ—á–µ–Ω–∏–∏ 5 –º–∏–Ω—É—Ç\n–í—ã –Ω–µ –∑–∞–π–º–µ—Ç–µ –¥–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è,\n–æ–Ω–æ —Å—Ç–∞–Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –¥—Ä—É–≥–∏—Ö –ª—é–¥–µ–π\n\nüìÖ  –î–∞—Ç–∞: ' + dt.DateToStr(
                            shiftdate, 1) + '\n' + 'üïó  –í—Ä–µ–º—è: ' + dt.IntToTimeStr(
                            begintime) + '\nüíÖüèª  –£—Å–ª—É–≥–∞: ' + str(
                            servicename) + '\n' + 'üë©üèª‚Äçüíº  –ú–∞—Å—Ç–µ—Ä: ' + str(username)
                        keyboard2 = telebot.types.InlineKeyboardMarkup(row_width=3)
                        key_bk = telebot.types.InlineKeyboardButton(text='–î–∞ ‚úÖ',
                                                                    callback_data='booking_additional_talon/' + str(
                                                                        talonid))
                        key_bkn = telebot.types.InlineKeyboardButton(text='–ù–µ—Ç ‚ùå',
                                                                     callback_data='pass_additional_talon/' + str(
                                                                         talonid))
                        buttons = []
                        buttons.append(key_bk)
                        buttons.append(key_bkn)
                        keyboard2.add(*buttons)
                        bot.send_message(self.call.message.chat.id, sendingmsg, reply_markup=keyboard2)
                        db.add_booked_talon(talonid)

                    keyboard3 = telebot.types.InlineKeyboardMarkup(row_width=1)
                    key_go_back = telebot.types.InlineKeyboardButton(text='‚¨Ö –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
                                                                     callback_data='start/2')
                    keyboard3.add(key_go_back)
                    bot.send_message(self.call.message.chat.id, '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:', reply_markup=keyboard3)
            else:
                bot.delete_message(self.call.message.chat.id, message.message_id)
                bot.delete_message(self.call.message.chat.id, old_message)
                keyboard3 = telebot.types.InlineKeyboardMarkup(row_width=1)
                key_go_back = telebot.types.InlineKeyboardButton(text='‚¨Ö –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
                                                                 callback_data='start/2')
                keyboard3.add(key_go_back)
                bot.send_message(self.call.message.chat.id,
                                 '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –¥–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è —É–∂–µ –∑–∞–Ω—è—Ç–æüòî\n—Ç.–∫. –≤—ã –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∏ –µ–≥–æ –≤ —Ç–µ—á–µ–Ω–∏–∏ 5 –º–∏–Ω—É—Ç. \n–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:',
                                 reply_markup=keyboard3)
        except Exception as ex:
            self.reg_get_patient_phone(talonid, old_message)


    def booking_additional_talon(self, talonid):

        talon_status = db.get_talon_status(talonid)

        if talon_status:

            chatid = self.call.message.json['chat']['id']
            tlg_clientid = self.call.from_user.id
            cl_name = self.call.from_user.first_name
            tlg_client_name = self.call.from_user.username

            taloninfo = db.get_talon(talonid)
            serviceid = taloninfo[5]
            res = db.get_clients_booked_talons(self.call.message.chat.id, serviceid)

            if len(res) == 0:
                set_talon = db.add_client_talon(talonid, chatid, tlg_clientid, cl_name, tlg_client_name, '')
                if set_talon:
                    taloninfo = db.get_talon(talonid)
                    (talonid, shiftdate, begintime, endtime, username, serviceid, servicename, cost, eventid, gcalendarid,
                    client_name, phone, tlg_client_name) = taloninfo
                    event_star = dt.DateToDateIsoformat(shiftdate + (begintime / 1440))
                    event_end = dt.DateToDateIsoformat(shiftdate + (endtime / 1440))
                    colorId = 4
                    Gcalendar.update_event(gcalendarid, eventid, event_star, event_end, talonid, client_name, phone, str('https://t.me/' + tlg_client_name), colorId)
                    msgstr = '‚úÖ –í—Ä–µ–º—è –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–æ!\n\nüìÖ –î–∞—Ç–∞: ' + dt.DateToStr(shiftdate, 1) + ' –≤ ' + dt.IntToTimeStr(
                        begintime) + '\nüíÖüèª –£—Å–ª—É–≥–∞: ' + str(servicename) + '\nüë©üèª‚Äçüíº –í–∞—à –º–∞—Å—Ç–µ—Ä: ' + str(
                       username)
                    buttons = []
                    keyboard = telebot.types.InlineKeyboardMarkup(row_width=1)
                    key_del_tln = telebot.types.InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å ‚ùå',
                                                                     callback_data='del_talon' + '/' + str(talonid))
                    key_del_msg = telebot.types.InlineKeyboardButton(text='–£–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ üóë',
                                                                     callback_data='del_msg')
                    keyboard.add(key_del_tln)
                    keyboard.add(key_del_msg)
                    keyboard.add(*buttons)
                    bot.answer_callback_query(callback_query_id=self.call.id, show_alert=True,
                                              text="–í—Ä–µ–º—è –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–æ! ‚úÖ")
                    bot.edit_message_text(msgstr, self.call.message.chat.id, self.call.message.message_id,
                                          reply_markup=keyboard)
            else:
                bot.answer_callback_query(callback_query_id=self.call.id, show_alert=True,
                                          text="–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∑–∞–ø–∏—Å—å –Ω–∞ –¥–∞–Ω–Ω—É—é —É—Å–ª—É–≥—É, —Å–ø–µ—Ä–≤–∞ –æ—Ç–º–µ–Ω–∏—Ç–µ —Å—Ç–∞—Ä—É—é –∑–∞–ø–∏—Å—å:")
                for talonid, shiftdate, begintime, endtime, username, serviceid, servicename, cost in res:
                    sendingmsg = 'üìÖ –î–∞—Ç–∞: ' + dt.DateToStr(shiftdate, 1) + ' –≤ ' + dt.IntToTimeStr(
                        begintime) + '\nüíÖüèª –£—Å–ª—É–≥–∞: ' + str(servicename) + '\nüë©üèª‚Äçüíº –í–∞—à –º–∞—Å—Ç–µ—Ä: ' + str(username)
                    keyboard = telebot.types.InlineKeyboardMarkup(row_width=1)
                    key_del_tln = telebot.types.InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å ‚ùå',
                                                                     callback_data='del_talon' + '/' + str(talonid))
                    key_del_msg = telebot.types.InlineKeyboardButton(text='–£–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ üóë',
                                                                     callback_data='del_msg')
                    keyboard.add(key_del_tln)
                    keyboard.add(key_del_msg)
                    bot.send_message(self.call.message.chat.id, sendingmsg, reply_markup=keyboard)
        else:
            bot.answer_callback_query(callback_query_id=self.call.id, show_alert=True,
                                      text="–î–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è —É–∂–µ –∑–∞–Ω—è—Ç–æüòî —Ç.–∫. –≤—ã –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∏ –∑–∞–ø–∏—Å—å –≤ —Ç–µ—á–µ–Ω–∏–∏ 5 –º–∏–Ω—É—Ç ")
            bot.delete_message(self.call.message.chat.id, self.call.message.message_id)

    def del_talon(self, talonid):
        taloninfo = db.get_talon(talonid)
        (talonid, shiftdate, begintime, endtime, username, serviceid, servicename, cost, eventid, gcalendarid,
         client_name, phone, tlg_client_name) = taloninfo
        currdt = math.floor(dt.Current_Now())
        if shiftdate >= currdt:
            res = db.del_talon(talonid)
        else:
            res = False
        if res:
            sendingmsg = '–ó–∞–ø–∏—Å—å –æ—Ç–º–µ–Ω–µ–Ω–∞ ‚ùå\n\nüìÖ –î–∞—Ç–∞: ' + dt.DateToStr(shiftdate, 1) + ' –≤ ' + dt.IntToTimeStr(
                begintime) + '\nüíÖüèª –£—Å–ª—É–≥–∞: ' + str(servicename) + '\nüë©üèª‚Äçüíº –í–∞—à –º–∞—Å—Ç–µ—Ä: ' + str(username)
            bot.edit_message_text(sendingmsg, self.call.message.chat.id, self.call.message.message_id)
            bot.delete_message(self.call.message.chat.id, self.call.message.message_id)
            bot.answer_callback_query(callback_query_id=self.call.id, show_alert=True,
                                      text="–ó–∞–ø–∏—Å—å –æ—Ç–º–µ–Ω–µ–Ω–∞ ‚ùå")
            event_star = dt.DateToDateIsoformat(shiftdate + (begintime / 1440))
            event_end = dt.DateToDateIsoformat(shiftdate + (endtime / 1440))
            colorId = 2
            Gcalendar.update_event(gcalendarid, eventid, event_star, event_end, talonid, '–°–≤–æ–±–æ–¥–Ω–æ–µ –≤—Ä–µ–º—è', '', '', colorId)
        else:
            bot.answer_callback_query(callback_query_id=self.call.id, show_alert=True,
                                      text="–î–∞—Ç–∞ —Ç–∞–ª–æ–Ω–∞ —É–∂–µ –ø—Ä–æ—à–ª–∞\n–ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–∞–º –º–µ—à–∞–µ—Ç, –Ω–∞–∂–Ω–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É '–£–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ'")




@bot.message_handler(commands=['start'])
def start_message(message):
    get_main_menu(message, message.from_user.id, message.chat.id, 1)

@bot.callback_query_handler(func=lambda call: True)
def callback_bot(call):


    if 'start' in call.data:  # call.data —ç—Ç–æ callback_data, –∫–æ—Ç–æ—Ä—É—é –º—ã —É–∫–∞–∑–∞–ª–∏ –ø—Ä–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏–∏ –∫–Ω–æ–ø–∫–∏
        type = call.data.split('/', 1)[1]
        #if int(type) == 2:
        bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id)

        get_main_menu(call, call.from_user.id, call.message.chat.id, type)

    if call.data == 'admin_mode':  # call.data —ç—Ç–æ callback_data, –∫–æ—Ç–æ—Ä—É—é –º—ã —É–∫–∞–∑–∞–ª–∏ –ø—Ä–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏–∏ –∫–Ω–æ–ø–∫–∏
        bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id)
        bot.answer_callback_query(callback_query_id=call.id, show_alert=False, text="–í—ã –≤–æ—à–ª–∏ –≤ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!")
        #bot.delete_message(call.message.chat.id, call.message.message_id)
        get_admin_menu(call)

    if call.data == 'location':  # call.data —ç—Ç–æ callback_data, –∫–æ—Ç–æ—Ä—É—é –º—ã —É–∫–∞–∑–∞–ª–∏ –ø—Ä–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏–∏ –∫–Ω–æ–ø–∫–∏

        keyboard = telebot.types.InlineKeyboardMarkup(row_width=1)
        key_go_back = telebot.types.InlineKeyboardButton(text='‚¨Ö –ù–∞–∑–∞–¥', callback_data='start/1')
        keyboard.add(key_go_back)
        bot.send_location(call.message.chat.id, 53.518775, 49.314679, reply_markup=keyboard)
        bot.edit_message_text('–ù–∞—à–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –∫–∞—Ä—Ç–µ: üìç', call.message.chat.id, call.message.message_id)

    if call.data == 'information':  # call.data —ç—Ç–æ callback_data, –∫–æ—Ç–æ—Ä—É—é –º—ã —É–∫–∞–∑–∞–ª–∏ –ø—Ä–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏–∏ –∫–Ω–æ–ø–∫–∏

        keyboard = telebot.types.InlineKeyboardMarkup(row_width=1)
        key_go_back = telebot.types.InlineKeyboardButton(text='‚¨Ö –ù–∞–∑–∞–¥', callback_data='start/2')
        keyboard.add(key_go_back)
        bot.edit_message_text('üíÖüèª –°–∞–ª–æ–Ω: TN Studio \nüìç –ê–¥—Ä–µ—Å: –≥. –¢–æ–ª—å—è—Ç—Ç–∏, –¢–¶ "–ê—Ä–±–∞—Ç", 40 –ª–µ—Ç\n      –ø–æ–±–µ–¥—ã 65–±, –æ—Ñ–∏—Å 302/4\nüì≤ –¢–µ–ª–µ—Ñ–æ–Ω: 8(927)218-42-31', call.message.chat.id, call.message.message_id, reply_markup=keyboard)

    if call.data == 'workers':
        worker = Workers(call)
        worker.get_workers_menu()

    if call.data == 'add_worker':
        worker = Workers(call)
        worker.add_worker_name()

    if call.data == 'edit_worker':
        worker = Workers(call)
        worker.edit_worker()

    if 'wrk_delete' in call.data:
        worker = Workers(call)
        worker.delete_worker()

    if call.data == 'services':
        services = Services(call)
        services.get_services_menu()

    if call.data == 'del_msg':
        bot.delete_message(call.message.chat.id, call.message.message_id)


    if call.data == 'add_services':
        services = Services(call)
        services.add_services()

    if 'edit_services' in call.data:
        services = Services(call)
        services.edit_services()

    if 'service_delete' in call.data:  # call.data —ç—Ç–æ callback_data, –∫–æ—Ç–æ—Ä—É—é –º—ã —É–∫–∞–∑–∞–ª–∏ –ø—Ä–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏–∏ –∫–Ω–æ–ø–∫–∏
        services = Services(call)
        services.delete_services()

    if call.data == 'shedule':
        shedule = Shedule(call)
        shedule.get_shedules_menu()

    elif call.data == 'add_shedule':
        shedule = Shedule(call)
        shedule.add_shedule_select_worker()

    elif 'select_shedule_worker_id' in call.data:
        callbackstr = call.data.split('/')[1]
        shedule = Shedule(call)
        shedule.add_shedule_select_service(callbackstr)

    elif 'select_shedule_service' in call.data:
        callbackstr = call.data.split('/', 1)[1]
        shedule = Shedule(call)
        shedule.add_shedule_select_shiftdate(callbackstr, 0)

    elif 'add_shedule_select_shiftdate_next' in call.data:
        callbackstr = call.data.split('/', 1)[1]
        userid, serviceid, enddate = callbackstr.split('/')[:]
        enddate = datetime.datetime.strptime(enddate, '%d.%m.%Y') + datetime.timedelta(2)
        shedule = Shedule(call)
        shedule.add_shedule_select_shiftdate(str(userid)+'/'+str(serviceid), enddate)

    elif 'add_shedule_select_shiftdate_back' in call.data:
        callbackstr = call.data.split('/', 1)[1]
        userid, serviceid, enddate = callbackstr.split('/')[:]
        shedule = Shedule(call)
        enddate = datetime.datetime.strptime(enddate, '%d.%m.%Y') - datetime.timedelta(30)
        shedule.add_shedule_select_shiftdate(str(userid) + '/' + str(serviceid), enddate)

    elif 'select_shiftdate' in call.data:
        callbackstr = call.data.split('/', 1)[1]
        shedule = Shedule(call)
        shedule.add_shedule_select_begintime(callbackstr)

    elif 'select_begintime' in call.data:
        callbackstr = call.data.split('/', 1)[1]
        shedule = Shedule(call)
        shedule.add_shedule_select_endtime(callbackstr)

    elif 'select_endtime' in call.data:
        callbackstr = call.data.split('/', 1)[1]
        shedule = Shedule(call)
        shedule.add_shedule_select_step(callbackstr)

    elif 'select_step' in call.data:
        callbackstr = call.data.split('/', 1)[1]
        shedule = Shedule(call)
        shedule.add_shedule(callbackstr)

    elif call.data == 'edit_shedule':
        shedule = Shedule(call)
        shedule.edit_shedule()

    elif call.data == 'show_shedule':
        shedule = Shedule(call)
        shedule.show_shedule()

    elif 'show_shedule_day'in call.data:
        callbackstr = call.data.split('/', 1)[1]
        shedule = Shedule(call)
        shedule.show_shedule_day(callbackstr)

    elif 'shedule_delete' in call.data:  # call.data —ç—Ç–æ callback_data, –∫–æ—Ç–æ—Ä—É—é –º—ã —É–∫–∞–∑–∞–ª–∏ –ø—Ä–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏–∏ –∫–Ω–æ–ø–∫–∏
        shedule = Shedule(call)
        shedule.delete_shedule()

    elif 'registration' in call.data:
        reg = Registration(call)
        reg.reg_select_service()

    elif 'reg_select_service/' in call.data:
        callbackstr = call.data.split('/')[1]
        reg = Registration(call)
        reg.reg_check_pat_employed_talons(callbackstr)
        #reg.reg_select_date(callbackstr)

    elif 'reg_select_date/' in call.data:
        callbackstr = call.data.split('/', 1)[1]
        reg = Registration(call)
        reg.reg_select_time(callbackstr)

    elif 'reg_select_time/' in call.data:
        callbackstr = call.data.split('/', 1)[1]
        reg = Registration(call)
        reg.reg_get_patient_phone(callbackstr, 0)

    elif 'booking_additional_talon/' in call.data:

        callbackstr = call.data.split('/', 1)[1]
        reg = Registration(call)
        reg.booking_additional_talon(callbackstr)

    elif 'pass_additional_talon/' in call.data:
        bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id)
        bot.delete_message(call.message.chat.id, call.message.message_id)

    elif 'del_talon/' in call.data:
        callbackstr = call.data.split('/', 1)[1]
        reg = Registration(call)
        reg.del_talon(callbackstr)




def get_main_menu(call, userid, chatid, type):
    print(userid)
    keyboard = telebot.types.InlineKeyboardMarkup(row_width=1)  # –Ω–∞—à–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    key_inf = telebot.types.InlineKeyboardButton(text='–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∞—Å ‚öí', callback_data='information')
    keyboard.add(key_inf)  # –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    key_location = telebot.types.InlineKeyboardButton(text='–ö–∞–∫ –ø—Ä–æ–µ—Ö–∞—Ç—å üöò', callback_data='location')
    keyboard.add(key_location)
    key_url = telebot.types.InlineKeyboardButton(text='–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞–±–æ—Ç—ã üíÖüèª',
                                                 url='https://instagram.com/nadezhda.nogotok?igshid=1uees69ae5wdj')
    keyboard.add(key_url)
    key_inst = telebot.types.InlineKeyboardButton(text='', callback_data='inst')
    keyboard.add(key_inst)
    key_reg = telebot.types.InlineKeyboardButton(text='–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Å–ª—É–≥—É üíÖüèª', callback_data='registration')
    keyboard.add(key_reg)

    if userid == 754897644 or userid == 636283883:
        key_admin_mode = telebot.types.InlineKeyboardButton(text='–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚öôÔ∏è', callback_data='admin_mode')
        keyboard.add(key_admin_mode)

    if int(type) == 1:
        bot.send_message(chatid,
                         '–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –ø—É–Ω–∫—Ç:',
                         reply_markup=keyboard)
    else:
        bot.edit_message_text(
            '–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –ø—É–Ω–∫—Ç:'
            , chatid, call.message.message_id, reply_markup=keyboard)

def get_admin_menu(call):

    if call.from_user.id == 754897644 or call.from_user.id == 636283883:

        keyboard = telebot.types.InlineKeyboardMarkup(row_width=1)  # –Ω–∞—à–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
        key_workers = telebot.types.InlineKeyboardButton(text='–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ üíÖüèª',
                                                     callback_data='workers')
        key_services = telebot.types.InlineKeyboardButton(text='–£—Å–ª—É–≥–∏ üõç',
                                                      callback_data='services')
        key_shedule = telebot.types.InlineKeyboardButton(text='–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ üóì',
                                                     callback_data='shedule')
        key_go_back = telebot.types.InlineKeyboardButton(text='‚¨Ö –ù–∞–∑–∞–¥',
                                                         callback_data='start/2')
        keyboard.add(key_workers)  # –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        keyboard.add(key_services)
        keyboard.add(key_shedule)
        keyboard.add(key_go_back)
        bot.edit_message_text('–í—ã –≤–æ—à–ª–∏ –≤ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:', call.message.chat.id, call.message.message_id, reply_markup=keyboard)
    else:
        bot.send_message(call.message.chat.id, '–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –±–æ—Ç–∞!')



if __name__ == '__main__':

    bot.skip_pending = True
    bot.polling(none_stop=True, interval=1)



